<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.todo_hitsumabushi.mapper.TaskMapper">

    <resultMap id="TaskResult" type="com.example.todo_hitsumabushi.repository.entity.Task">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="status" property="status"/>
        <result column="limit_date" property="limitDate"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
    </resultMap>

    <!-- SQL(TopService) -->
    <select id="selectFilterTasks" parameterType="com.example.todo_hitsumabushi.service.dto.FilterDto"
            resultMap="TaskResult">
        SELECT id, content, status, limit_date, created_date, updated_date
        FROM tasks
        <where>
            limit_date BETWEEN #{startDateTime} AND #{endDateTime}
            <if test="status != null and status != 0">
                AND status = #{status}
            </if>
            <if test="searchword != null and searchword != ''">
                AND content LIKE CONCAT('%', #{searchword}, '%')
            </if>
        </where>
        ORDER BY limit_date ASC
    </select>

    <!-- SQL(EditService) -->
    <select id="selectById" resultMap="TaskResult">
        SELECT id, content, status, limit_date, created_date, updated_date
        FROM tasks
        WHERE id = #{id}
    </select>
    <insert id="insertTask" parameterType="com.example.todo_hitsumabushi.repository.entity.Task">
        INSERT INTO tasks (content, status, limit_date)
        VALUES (#{content}, #{status}, #{limitDate})
    </insert>
    <update id="updateTask" parameterType="com.example.todo_hitsumabushi.repository.entity.Task">
        UPDATE tasks
        SET content = #{content},
        status = #{status},
        limit_date = #{limitDate},
        updated_date = now()
        WHERE id = #{id}
    </update>

    <!-- SQL(AddService) -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM tasks WHERE id = #{id}
    </delete>
    <insert id="insertTaskStatus" parameterType="com.example.todo_hitsumabushi.repository.entity.Task">
        INSERT INTO tasks (id, status)
        VALUES (#{id}, #{status})
    </insert>
    <update id="updateTaskStatus" parameterType="com.example.todo_hitsumabushi.repository.entity.Task">
        UPDATE tasks
        SET status = #{status}
        WHERE id = #{id}
    </update>

</mapper>